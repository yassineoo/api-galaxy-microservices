// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://terms-of-service-url.com",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/apis": {
            "get": {
                "description": "Retrieves a paginated list of APIs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apis Operations"
                ],
                "summary": "Get all APIs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Results per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new API from the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apis Operations"
                ],
                "summary": "Create API",
                "parameters": [
                    {
                        "description": "API Data",
                        "name": "api",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateApiDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/apis/{id}": {
            "get": {
                "description": "Retrieve API details based on the provided ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apis Operations"
                ],
                "summary": "Get API by ID",
                "operationId": "get-api-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "API ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Updates the API with the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apis Operations"
                ],
                "summary": "Update API by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "API ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "API Data",
                        "name": "api",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateApiDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the API with the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apis Operations"
                ],
                "summary": "Delete API by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "API ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Retrieves a paginated list of categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category Operations"
                ],
                "summary": "Get all categories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Results per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new category from the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category Operations"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category Data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CategoryDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "put": {
                "description": "Updates an existing category with the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category Operations"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category Data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CategoryDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the category with the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category Operations"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ApiResponse": {
            "type": "object",
            "properties": {
                "apis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ApiEntity"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.PaginationMeta"
                }
            }
        },
        "api.CategoryDto": {
            "type": "object",
            "properties": {
                "categoryName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "api.CreateApiDto": {
            "type": "object",
            "properties": {
                "categoryID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "imagePath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "providerID": {
                    "type": "integer"
                }
            }
        },
        "api.PaginationMeta": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "itemCount": {
                    "type": "integer"
                },
                "itemsPerPage": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateApiDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "imagePath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ApiEntity": {
            "type": "object",
            "properties": {
                "apiRatings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ApiRatingEntity"
                    }
                },
                "apiVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ApiVersionEntity"
                    }
                },
                "categoryID": {
                    "type": "integer"
                },
                "dateCreated": {
                    "type": "string"
                },
                "dateDeleted": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imagePath": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "providerID": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/types.ApiStatus"
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SubscriptionEntity"
                    }
                }
            }
        },
        "models.ApiKeyEntity": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "subscriptionID": {
                    "description": "ApiKeyID       int            ` + "`" + `gorm:\"primaryKey;autoIncrement\"` + "`" + `",
                    "type": "integer"
                }
            }
        },
        "models.ApiRatingEntity": {
            "type": "object",
            "properties": {
                "apiID": {
                    "description": "RatingID   int              ` + "`" + `gorm:\"primaryKey;autoIncrement\"` + "`" + `",
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "dateRated": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "models.ApiVersionEntity": {
            "type": "object",
            "properties": {
                "apiID": {
                    "description": "VersionID     int            ` + "`" + `gorm:\"primaryKey;autoIncrement\"` + "`" + `",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "releaseDate": {
                    "type": "string"
                },
                "versionNumber": {
                    "type": "string"
                },
                "whatsNew": {
                    "type": "string"
                }
            }
        },
        "models.SubscriptionEntity": {
            "type": "object",
            "properties": {
                "apiID": {
                    "type": "integer"
                },
                "apiKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ApiKeyEntity"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "planID": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "usageLogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UsageLogEntity"
                    }
                },
                "userID": {
                    "description": "SubscriptionID int            ` + "`" + `gorm:\"primaryKey;autoIncrement\"` + "`" + `",
                    "type": "integer"
                }
            }
        },
        "models.UsageLogEntity": {
            "type": "object",
            "properties": {
                "dataVolume": {
                    "type": "integer"
                },
                "endpoint": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "responseTime": {
                    "type": "integer"
                },
                "subscriptionID": {
                    "description": "LogID          int            ` + "`" + `gorm:\"primaryKey;autoIncrement\"` + "`" + `",
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "types.ApiStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive"
            ],
            "x-enum-varnames": [
                "StatusActive",
                "StatusInactive"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5000",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "API Title",
	Description:      "This is a sample server for a pet store.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
