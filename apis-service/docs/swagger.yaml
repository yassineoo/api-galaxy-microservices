basePath: /
definitions:
  models.EndpointsParameterEntity:
    properties:
      endpointID:
        type: integer
      exampleValue:
        type: string
      id:
        type: integer
      key:
        type: string
      parameterType:
        description: e.g., Query, Header,
        type: string
      required:
        type: boolean
      valueType:
        description: e.g., string, int, boolean
        type: string
    type: object
  models.HealthCheckEntity:
    properties:
      alertsEnabled:
        description:
          NextCheckAt    time.Time // The timestamp of the next scheduled
          health check
        type: boolean
      apiID:
        description: Foreign key to the ApiEntity, unique to ensure one-to-one relation
        type: integer
      id:
        type: integer
      lastCheckedAt:
        description: The timestamp of the last health check
        type: string
      lastStatus:
        description: Last status of the health check
        type: string
      results:
        description: |-
          AlertEndpoints string    `gorm:"size:2048"` // JSON array of endpoints to send alerts to (email, SMS, webhook, etc.)
          CreatedAt      time.Time `gorm:"default:CURRENT_TIMESTAMP"`
          UpdatedAt      time.Time
        items:
          $ref: "#/definitions/models.HealthCheckResultEntity"
        type: array
      schedule:
        description: Cron schedule string for when to run the check
        type: string
      url:
        description: The URL to be checked
        type: string
    type: object
  models.HealthCheckResultEntity:
    properties:
      checkedAt:
        description: The timestamp of when the check was performed
        type: string
      healthCheckID:
        description: Foreign key to the HealthCheckEntity
        type: integer
      id:
        type: integer
      responseTime:
        description: Response time in milliseconds
        type: integer
      status:
        description: Status of the check (success, failure)
        type: string
      statusMessage:
        description: A message describing the status (error message, success, etc.)
        type: string
    type: object
  types.ApiDto:
    properties:
      categoryID:
        type: integer
      description:
        type: string
      imagePath:
        type: string
      name:
        type: string
      providerID:
        type: integer
      status:
        description: Add other fields as needed...
        type: string
    type: object
  types.CategoryDto:
    properties:
      categoryName:
        type: string
      description:
        type: string
    type: object
  types.EndpointsDto:
    properties:
      apiID:
        type: integer
      description:
        type: string
      group:
        type: string
      groupID:
        type: integer
      methode:
        type: string
      url:
        type: string
    type: object
  types.EndpointsGroupDto:
    properties:
      apiID:
        type: integer
      description:
        type: string
      group:
        type: string
    type: object
  types.EndpointsParameterDto:
    properties:
      endpointID:
        type: integer
      exampleValue:
        type: string
      key:
        type: string
      parameterType:
        type: string
      required:
        type: boolean
      valueType:
        type: string
    type: object
  types.HealthCheckDto:
    properties:
      alertsEnabled:
        description: Whether alerts are enabled for this health check
        type: boolean
      apiId:
        description: The ID of the API for which the health check is being set up
        type: integer
      lastCheckedAt:
        description: The timestamp of the last health check
        type: string
      lastStatus:
        description: The last status of the health check
        type: string
      nextCheckAt:
        description: The timestamp of the next scheduled health check
        type: string
      schedule:
        description: Cron schedule string for when to run the check
        type: string
      url:
        description: The URL to be checked
        type: string
    required:
      - apiId
      - schedule
      - url
    type: object
  types.PlanDto:
    properties:
      apiID:
        type: integer
      description:
        type: string
      features:
        type: string
      limiteAmount:
        type: integer
      limiteTimeUnit:
        type: string
      limiteType:
        type: string
      name:
        type: string
      price:
        type: number
      recomonded:
        type: boolean
      type:
        type: string
      visibility:
        type: string
    type: object
  types.SubscriptionDto:
    properties:
      apiID:
        type: integer
      planId:
        type: integer
    type: object
  types.UpdateApiDto:
    properties:
      description:
        type: string
      imagePath:
        type: string
      name:
        type: string
    type: object
host: localhost:8088
info:
  contact: {}
  description: This is a sample server for a pet store.
  termsOfService: http://terms-of-service-url.com
  title: API Title
  version: "1.0"
paths:
  /Subscription:
    post:
      consumes:
        - application/json
      description: Creates a new API Subscription
      parameters:
        - description: API Subscription Data
          in: body
          name: Subscription
          required: true
          schema:
            $ref: "#/definitions/types.SubscriptionDto"
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create an API Subscription
      tags:
        - API Subscription Operations
  /Subscription/:api-id:
    get:
      description: Retrieves Subscriptions for a specific API
      parameters:
        - description: API ID
          in: path
          name: api-id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get API Subscriptions by API ID
      tags:
        - API Subscription Operations
  /Subscription/:id:
    delete:
      description: Deletes a specific API Subscription
      parameters:
        - description: Subscription ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an API Subscription
      tags:
        - API Subscription Operations
    patch:
      consumes:
        - application/json
      description: Updates an existing API Subscription
      parameters:
        - description: Subscription ID
          in: path
          name: id
          required: true
          type: integer
        - description: API Subscription Data
          in: body
          name: Subscription
          required: true
          schema:
            $ref: "#/definitions/types.SubscriptionDto"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an API Subscription
      tags:
        - API Subscription Operations
  /apis:
    get:
      description: Retrieves a paginated list of APIs
      parameters:
        - description: Page number
          in: query
          name: page
          type: integer
        - description: Results per page
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all APIs
      tags:
        - Apis Operations
    post:
      consumes:
        - application/json
      description: Creates a new API from the provided data
      parameters:
        - description: API Data
          in: body
          name: api
          required: true
          schema:
            $ref: "#/definitions/types.ApiDto"
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create API
      tags:
        - Apis Operations
  /apis/{id}:
    delete:
      description: Deletes the API with the provided ID
      parameters:
        - description: API ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete API by ID
      tags:
        - Apis Operations
    get:
      description: Retrieve API details based on the provided ID.
      operationId: get-api-by-id
      parameters:
        - description: API ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
      summary: Get API by ID
      tags:
        - Apis Operations
    put:
      consumes:
        - application/json
      description: Updates the API with the given ID
      parameters:
        - description: API ID
          in: path
          name: id
          required: true
          type: integer
        - description: API Data
          in: body
          name: api
          required: true
          schema:
            $ref: "#/definitions/types.UpdateApiDto"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update API by ID
      tags:
        - Apis Operations
  /categories:
    get:
      description: Retrieves a paginated list of categories
      parameters:
        - description: Page number
          in: query
          name: page
          type: integer
        - description: Results per page
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all categories
      tags:
        - Category Operations
    post:
      consumes:
        - application/json
      description: Creates a new category from the provided data
      parameters:
        - description: Category Data
          in: body
          name: category
          required: true
          schema:
            $ref: "#/definitions/types.CategoryDto"
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new category
      tags:
        - Category Operations
  /categories/{id}:
    delete:
      description: Deletes the category with the provided ID
      parameters:
        - description: Category ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a category
      tags:
        - Category Operations
    put:
      consumes:
        - application/json
      description: Updates an existing category with the given ID
      parameters:
        - description: Category ID
          in: path
          name: id
          required: true
          type: integer
        - description: Category Data
          in: body
          name: category
          required: true
          schema:
            $ref: "#/definitions/types.CategoryDto"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a category
      tags:
        - Category Operations
  /endpoints:
    post:
      consumes:
        - application/json
      description: Creates a new API Endpoints
      parameters:
        - description: API Endpoints Data
          in: body
          name: endpoints
          required: true
          schema:
            $ref: "#/definitions/types.EndpointsDto"
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create an API Endpoints
      tags:
        - API Endpoints Operations
  /endpoints-group:
    get:
      description: Retrieves all Endpoints Groups
      parameters:
        - description: Page number
          in: query
          name: page
          type: integer
        - description: Number of items per page
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Endpoints Groups
      tags:
        - Endpoints Group Operations
    post:
      consumes:
        - application/json
      description: Creates a new Endpoints Group
      parameters:
        - description: Endpoints Group Data
          in: body
          name: endpoints-group
          required: true
          schema:
            $ref: "#/definitions/types.EndpointsGroupDto"
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create an Endpoints Group
      tags:
        - Endpoints Group Operations
  /endpoints-group/:id:
    delete:
      description: Deletes a specific Endpoints Group
      parameters:
        - description: Endpoints Group ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an Endpoints Group
      tags:
        - Endpoints Group Operations
    patch:
      consumes:
        - application/json
      description: Updates an existing Endpoints Group
      parameters:
        - description: Endpoints Group ID
          in: path
          name: id
          required: true
          type: integer
        - description: Endpoints Group Data
          in: body
          name: endpoints-group
          required: true
          schema:
            $ref: "#/definitions/types.EndpointsGroupDto"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an Endpoints Group
      tags:
        - Endpoints Group Operations
  /endpoints-parameter:
    post:
      consumes:
        - application/json
      description: Creates a new Endpoints Parameter
      parameters:
        - description: Endpoints Parameter Data
          in: body
          name: endpoints-parameter
          required: true
          schema:
            $ref: "#/definitions/types.EndpointsParameterDto"
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/models.EndpointsParameterEntity"
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create an Endpoints Parameter
      tags:
        - Endpoints Parameter Operations
  /endpoints-parameter/{endpoint-id}:
    get:
      description: Retrieves all Endpoints Parameters for a specific Endpoint
      parameters:
        - description: Endpoint ID
          in: path
          name: endpoint-id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/models.EndpointsParameterEntity"
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Endpoints Parameters
      tags:
        - Endpoints Parameter Operations
  /endpoints-parameter/{id}:
    delete:
      description: Deletes a specific Endpoints Parameter
      parameters:
        - description: Endpoints Parameter ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an Endpoints Parameter
      tags:
        - Endpoints Parameter Operations
    patch:
      consumes:
        - application/json
      description: Updates an existing Endpoints Parameter
      parameters:
        - description: Endpoints Parameter ID
          in: path
          name: id
          required: true
          type: integer
        - description: Endpoints Parameter Data
          in: body
          name: endpoints-parameter
          required: true
          schema:
            $ref: "#/definitions/types.EndpointsParameterDto"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/models.EndpointsParameterEntity"
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an Endpoints Parameter
      tags:
        - Endpoints Parameter Operations
  /endpoints/:api-id:
    get:
      description: Retrieves endpointss for a specific API
      parameters:
        - description: API ID
          in: path
          name: api-id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get API Endpointss by API ID
      tags:
        - API Endpoints Operations
  /endpoints/:id:
    delete:
      description: Deletes a specific API Endpoints
      parameters:
        - description: Endpoints ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an API Endpoints
      tags:
        - API Endpoints Operations
    patch:
      consumes:
        - application/json
      description: Updates an existing API Endpoints
      parameters:
        - description: Endpoints ID
          in: path
          name: id
          required: true
          type: integer
        - description: API Endpoints Data
          in: body
          name: endpoints
          required: true
          schema:
            $ref: "#/definitions/types.EndpointsDto"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an API Endpoints
      tags:
        - API Endpoints Operations
  /health-checks:
    post:
      consumes:
        - application/json
      description: Creates a new Health Check for an API
      parameters:
        - description: Health Check Data
          in: body
          name: health-check
          required: true
          schema:
            $ref: "#/definitions/types.HealthCheckDto"
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/models.HealthCheckEntity"
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a Health Check
      tags:
        - Health Checks
  /health-checks/{api-id}:
    get:
      description: Retrieves a Health Check for a specific API
      parameters:
        - description: API ID
          in: path
          name: api-id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/models.HealthCheckEntity"
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Health Check by API ID
      tags:
        - Health Checks
  /health-checks/{api-id}/success-percentage:
    get:
      description: Get the success percentage of health checks for a specific API
      parameters:
        - description: API ID
          in: path
          name: api-id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: number
            type: object
        "400":
          description: Invalid API ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Health Check Success Percentage
      tags:
        - Health Checks
  /health-checks/{id}:
    delete:
      description: Deletes a specific Health Check for an API
      parameters:
        - description: Health Check ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a Health Check
      tags:
        - Health Checks
    patch:
      consumes:
        - application/json
      description: Updates an existing Health Check for an API
      parameters:
        - description: Health Check ID
          in: path
          name: id
          required: true
          type: integer
        - description: Health Check Data
          in: body
          name: health-check
          required: true
          schema:
            $ref: "#/definitions/types.HealthCheckDto"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/models.HealthCheckEntity"
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a Health Check
      tags:
        - Health Checks
  /plan:
    post:
      consumes:
        - application/json
      description: Creates a new API Plan
      parameters:
        - description: API Plan Data
          in: body
          name: plan
          required: true
          schema:
            $ref: "#/definitions/types.PlanDto"
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create an API Plan
      tags:
        - API Plan Operations
  /plan/:api-id:
    get:
      description: Retrieves plans for a specific API
      parameters:
        - description: API ID
          in: path
          name: api-id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get API Plans by API ID
      tags:
        - API Plan Operations
  /plan/:id:
    delete:
      description: Deletes a specific API Plan
      parameters:
        - description: Plan ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an API Plan
      tags:
        - API Plan Operations
    patch:
      consumes:
        - application/json
      description: Updates an existing API Plan
      parameters:
        - description: Plan ID
          in: path
          name: id
          required: true
          type: integer
        - description: API Plan Data
          in: body
          name: plan
          required: true
          schema:
            $ref: "#/definitions/types.PlanDto"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an API Plan
      tags:
        - API Plan Operations
schemes:
  - http
  - https
swagger: "2.0"
